@page "/Articulo/Create"

@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inject IClientService<Articulos> articuloService
@inject NavigationManager Navigation

<PageTitle>Crear Art&iacute;culo</PageTitle>
<EditForm Model="Articulo" OnValidSubmit="Guardar" FormName="CrearArticulo">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<div class="bg-primary text-white">
					<h3>Crear Art&iacute;culo</h3>
				</div>
			</div>
			@*Body*@
			<div class="card-body">
				<div class="row">
					@*ArticuloId*@
					<div class="col-1">
						<label class="form-label" for="id"><strong>ArticuloId</strong></label>
						<InputNumber class="form-control" id="id" @bind-Value="Articulo.ArticuloId" readonly></InputNumber>
					</div>
					@*Descripcion*@
					<div class="ms-5 col-4">
						<label class="form-label" for="descripcion"><strong>Descripci&oacute;n</strong></label>
						<InputText class="form-control" id="descripcion" @bind-Value=Articulo.Descripcion></InputText>
						<ValidationMessage For="(()=> Articulo.Descripcion)" />
					</div>
				</div>
				@*Segundo Fila*@
				<div class="row mt-3">
					@*Costo*@
					<div class="col-3">
						<label class="form-label" for="costo"><strong>Costo</strong></label>
						<input class="form-control" id="costo" @bind="Costo" @bind:event="oninput" />
						<ValidationMessage For="(()=> Articulo.Costo)" />
					</div>
					@*Ganancia*@
					<div class="col-3">
						<label class="form-label" for="ganancia"><strong>Ganancia</strong></label>
						<input class="form-control" id="ganancia" @bind="Ganancia" @bind:event="oninput" />
						<ValidationMessage For="(()=> Articulo.Ganancia)" />
					</div>
					@*Precio*@
					<div class="col-3">
						<label class="form-label" for="precio"><strong>Precio</strong></label>
						<label class="form-control" id="precio" readonly>@Articulo.Precio.ToString("N2")</label>
					</div>
				</div>
			</div>
			@*Footer*@
			<div class="card-footer text-center">
				<button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver</button>
				<button type="submit" class="btn btn-outline-success">Guardar</button>
			</div>
		</div>
	</div>
</EditForm>



@code {
	public Articulos Articulo { get; set; } = new Articulos();
	public string Mensaje { get; set; } = string.Empty;

	private async Task Guardar() {
		if (await Validar()) {
			Mensaje = "Ya existe un articulo con esta descripción";
			return;
		}

		var crear = await articuloService.CreateAsync(Articulo);
		if (crear != null)
			Mensaje = $"El artículo {Articulo.Descripcion} se ha creado correctamente";

		else
			Mensaje = "No se ha creado correctamente";
	}

	public double Costo {
		get => Articulo.Costo;
		set
		{
			if (Articulo.Costo != value) {
				Articulo.Costo = value;
				CalcularPrecio();
			}
		}
	}

	public double Ganancia {
		get => Articulo.Ganancia;
		set
		{
			if (Articulo.Ganancia != value) {
				Articulo.Ganancia = value;
				CalcularPrecio();
			}
		}

	}

	private void CalcularPrecio() {
		Articulo.Precio = Articulo.Costo + (Articulo.Costo * (Articulo.Ganancia / 100));
	}

	private async Task<bool> Validar() {
		var existe = await articuloService.ExisteDescripcionAsync(Articulo.ArticuloId, Articulo.Descripcion);
		return existe;
	}

	public void Volver() {
		Navigation.NavigateTo("/Articulo/Index");
	}
}
